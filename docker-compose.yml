version: "3"

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24

secrets:
  pihole_password:
    file: pihole/password.txt
  plex_claim:
    file: plex/claim.txt
  openvpn_creds:
    file: openvpn/creds.txt
  duckdns_token:
    file: duckdns/token.txt

services:
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - TZ=America/New_York
      - SUBDOMAINS=kunginator
      - FILE__TOKEN=/run/secrets/duckdns_token
    restart: unless-stopped
  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    image: 'jc21/nginx-proxy-manager:latest' 
    restart: unless-stopped 
    ports:
      - 80:80
      - 443:443
      # pihole
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 547:547/udp
      - 81:81
      - 8080:8080
      # plex
      - 32400:32400/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      # wireguard
      - 51820:51820/udp
    volumes:
      - ./ngm/data:/data
      - ./ngm/letsencrypt:/etc/letsencrypt
    networks:
      - private_network

  pihole:
    depends_on: [unbound]
    container_name: pihole
    image: pihole/pihole:latest
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
      - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN
    environment:
      TZ: 'America/New_York'
      WEBPASSWORD_FILE: /run/secrets/pihole_password 
      FTLCONF_LOCAL_IPV4: 192.168.1.161
      PIHOLE_DNS_: 10.2.0.200 
    secrets:
      - pihole_password
    restart: always
    networks:
      private_network:
        ipv4_address: 10.2.0.100

  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:latest 
    restart: unless-stopped
    devices:
      - /dev/dri:/dev/dri
    environment:
      TZ: 'America/New_York'
      PLEX_UID: 1000
      PLEX_GID: 1000
      VERSION: latest
      ADVERTISE_IP: "http://192.168.1.161:32400/"
      FILE__PLEX_CLAIM: /run/secrets/plex_claim
    secrets:
      - plex_claim
    hostname: nucbox
    volumes:
      - /media/nas/hdd1/plex/config:/config
      - /media/nas/hdd1/plex/transcode:/transcode
      - /media/nas/hdd1/transmission/Movies:/data/Movies
      - /media/nas/hdd1/transmission/TV:/data/TV
      - /media/nas/hdd1/transmission/Music:/data/Music
    networks:
      - private_network

  unbound:
    image: "mvance/unbound:latest"
    container_name: unbound
    restart: unless-stopped
    hostname: "unbound"
    networks:
      private_network:
        ipv4_address: 10.2.0.200

  wireguard:
    depends_on: [unbound, pihole]
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - SERVERPORT=51820
      - SERVERURL=kunginator.duckdns.org
      - PEERS=3 # How many peers to generate for you (clients)
      - PEERDNS=10.2.0.100
      - INTERNAL_SUBNET=10.6.0.0
      
    volumes:
      - ./wireguard:/config
      - /lib/modules:/lib/modules
    dns:
      - 10.2.0.100 # Points to pihole
      - 10.2.0.200 # Points to unbound
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

    restart: unless-stopped
    networks:
      - private_network

  transmission:
      container_name: transmission
      cap_add:
          - NET_ADMIN
      volumes:
          - '/media/nas/hdd1/transmission:/data'
          - '/media/nas/hdd1/transmission/config/:/config'
          - '/vpn-configs-contrib/.git:/.git'
      environment:
        OPENVPN_PROVIDER: VPNUNLIMITED
        OPENVPN_CONFIG: ca-tr,fr,ro
        GITHUB_CONFIG_SOURCE_REPO: roastedchiken/vpn-configs-contrib
        LOCAL_NETWORK: 192.168.0.0/16,10.6.0.2/32
        TRANSMISSION_WEB_UI: combustion
      secrets:
        - openvpn_creds
      image: haugene/transmission-openvpn:latest
      networks:
        - private_network
          
  portainer:
    image: portainer/portainer-ce:lts
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
    networks:
      - private_network


